/*******************************************************************************

File        : !logger.c.logger

Date        : Sunday 16th September 2021

Author      : Gavin Cawley

Description : Implementation of functions used to send user message to log
              debugger messages with the !logger task.

History     : 26/09/2021 v0.01 - started work

*******************************************************************************/
         
#include <string.h>
#include <stdarg.h>
#include <stdio.h>

#include "wimp.h"
#include "wimpt.h"

#include "logger.h"      

static wimp_t logger_task_id = 0;

/*******************************************************************************
*                                                                              *
*      Interface functions (documentation comments in the header file)         *                           *
*                                                                              *
*******************************************************************************/


#define TaskManager_EnumerateTasks 0x42681

wimp_t logger_task(void)
{
   int buffer[16];

   os_regset regs;

   regs.r[0] = 0;
                         
   do
   { 
      regs.r[1] = (int)&buffer;
      regs.r[2] = 64;

      wimpt_complain(os_swix(TaskManager_EnumerateTasks, &regs));

      for (int *block = buffer; block < (int*)regs.r[1]; block += 4)
      {                               
         if (strcmp("Logger", (char*)block[1]) == 0)
         {
            return block[0];
         }
      }  
   }
   while (regs.r[0] >= 0);

   return 0;
}

void logger_registerClient(wimp_t task, char *taskname)
{                     
   if (logger_task_id == 0)
   {                         
      logger_task_id = logger_task();
   }

   LoggerMessage msg;   
                      
   //int len = strlen(taskname);

   msg.hdr.size         = 256;
   msg.hdr.your_ref     = 0;
   msg.hdr.action       = (wimp_msgaction)LOGGER_MESSAGE;
   msg.type             = LOGGER_REGISTER_CLIENT;    
   msg.data.client.task = task;
   
   strncpy(msg.data.client.taskname, taskname, 228);                          
                
   wimp_sendmessage(wimp_ESEND, (wimp_msgstr*)&msg, logger_task_id);
}

void logger_log(char *str)
{          
   LoggerMessage msg;

   msg.hdr.size      = 256;
   msg.hdr.your_ref  = 0;
   msg.hdr.action    = (wimp_msgaction)LOGGER_MESSAGE;
   msg.type          = LOGGER_LOG_MESSAGE;
                          
   strncpy(msg.data.str, str, 232);                          
                
   wimp_sendmessage(wimp_ESEND, (wimp_msgstr*)&msg, logger_task_id);
}


void logger_logf(char *format, ...)
{          
   LoggerMessage msg;

   va_list ap;              

   va_start(ap, format);

   msg.hdr.size      = 256;
   msg.hdr.your_ref  = 0;
   msg.hdr.action    = (wimp_msgaction)LOGGER_MESSAGE;
   msg.type          = LOGGER_LOG_MESSAGE;
                          
   vsnprintf(msg.data.str, 232, format, ap);                          
                
   wimp_sendmessage(wimp_ESEND, (wimp_msgstr*)&msg, logger_task_id);
}


/******************************************************************************/
